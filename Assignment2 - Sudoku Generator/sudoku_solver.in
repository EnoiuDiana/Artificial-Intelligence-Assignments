assign(domain_size, 9).      % for a 9x9 puzzle
assign(max_seconds, 2).      % time limit
set(arithmetic).

formulas(sudoku_rules).

% At most one of each in each row.

all x all y1 all y2 (f(x, y1) = f(x, y2) -> y1 = y2).

% At most one of each in each column.

all x1 all x2 all y (f(x1, y) = f(x2, y) -> x1 = x2).

all x same_interval(x,x).
all x all y (same_interval(x,y) -> same_interval(y,x)).
all x all y all z (same_interval(x,y) & same_interval(y,z) -> same_interval(x,z)).

same_interval(0,1).
same_interval(1,2).

same_interval(3,4).
same_interval(4,5).

same_interval(6,7).
same_interval(7,8).

-same_interval(0,3).
-same_interval(3,6).
-same_interval(0,6).

all x1 all y1 all x2 all y2
  (
     same_interval(x1,x2) &
     same_interval(y1,y2) &
     f(x1, y1) = f(x2, y2)
  ->
     x1 = x2 &
     y1 = y2 
  ).

end_of_list.

formulas(sample_puzzle).
f(0,5) = 2.
f(0,8) = 0.
f(1,0) = 5.
f(1,1) = 4.
f(1,4) = 8.
f(1,6) = 2.
f(2,0) = 1.
f(2,2) = 3.
f(2,4) = 7.
f(2,6) = 5.
f(3,0) = 7.
f(3,2) = 4.
f(4,3) = 0.
f(4,8) = 7.
f(5,2) = 5.
f(5,4) = 3.
f(5,7) = 6.
f(6,5) = 5.
f(6,7) = 0.
f(6,8) = 1.
f(7,3) = 6.
f(7,4) = 0.
f(7,5) = 3.
f(8,6) = 8.
f(8,8) = 5.
end_of_list.
