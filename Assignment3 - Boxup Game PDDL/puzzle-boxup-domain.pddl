(define (domain sliding-tile)

  (:predicates
   (is-tile ?t)
   (is-block ?b)
   (is-miss-left ?l)
   (is-miss-right ?l)
   (is-miss-up ?l)
   (is-miss-down ?l)
   (tile-at ?t ?r ?c)
   (is-blank ?r ?c)
   (next-row ?r1 ?r2)
   (next-column ?c1 ?c2)
   (block-at ?b ?r ?c)
   (block-missing ?b ?x)
   (is-small-block ?b)
   (is-big-block ?b)
  )

  (:action move-tile-down
    :parameters (?tile ?old-row ?new-row ?col)
    :precondition (and (is-tile ?tile)
    			(next-row ?old-row ?new-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?new-row ?col)
                       (is-blank ?old-row ?col))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
     
  (:action move-tile-down-inside-block
    :parameters (?tile ?old-row ?new-row ?col ?block ?up)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-up ?up)
    			(next-row ?old-row ?new-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?old-row ?col)
                       (not(is-blank ?new-row ?col))
                       (block-at ?block ?new-row ?col)
                       (block-missing ?block ?up))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
  (:action move-tile-down-outside-block
    :parameters (?tile ?old-row ?new-row ?col ?block ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-down ?down)
    			(next-row ?old-row ?new-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?new-row ?col)
                       (block-at ?block ?old-row ?col)
                       (block-missing ?block ?down))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
  (:action move-tile-down-from-block-to-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?up ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-up ?up)
    			(is-miss-down ?down)
    			(next-row ?new-row ?old-row)
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (block-missing ?block1 ?down)
                       (block-at ?block2 ?new-row ?col)
                       (block-missing ?block2 ?up))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
  

  (:action move-tile-up
    :parameters (?tile ?old-row ?new-row ?col)
    :precondition (and (is-tile ?tile)
    			(next-row ?new-row ?old-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?new-row ?col)
                       (is-blank ?old-row ?col))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
  (:action move-tile-up-inside-block
    :parameters (?tile ?old-row ?new-row ?col ?block ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-down ?down)
    			(next-row ?new-row ?old-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?old-row ?col)
                       (not(is-blank ?new-row ?col))
                       (block-at ?block ?new-row ?col)
                       (block-missing ?block ?down))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
  (:action move-tile-up-outside-block
    :parameters (?tile ?old-row ?new-row ?col ?block ?up)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-up ?up)
    			(next-row ?new-row ?old-row)
                       (tile-at ?tile ?old-row ?col)
                       (is-blank ?new-row ?col)
                       (block-at ?block ?old-row ?col)
                       (block-missing ?block ?up))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))
                 
  (:action move-tile-up-from-block-to-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?up ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-up ?up)
    			(is-miss-down ?down)
    			(next-row ?new-row ?old-row)
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (block-missing ?block1 ?up)
                       (block-at ?block2 ?new-row ?col)
                       (block-missing ?block2 ?down))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)))

  (:action move-tile-right
    :parameters (?tile ?row ?old-col ?new-col)
    :precondition (and (is-tile ?tile)
    			(next-column ?old-col ?new-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?new-col)
                       (is-blank ?row ?old-col))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-right-inside-block
    :parameters (?tile ?row ?old-col ?new-col ?block ?left)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-left ?left)
    			(next-column ?old-col ?new-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?old-col)
                       (not(is-blank ?row ?new-col))
                       (block-at ?block ?row ?new-col)
                       (block-missing ?block ?left))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-right-outside-block
    :parameters (?tile ?row ?old-col ?new-col ?block ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-right ?right)
    			(next-column ?old-col ?new-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?new-col)
                       (block-at ?block ?row ?old-col)
                       (block-missing ?block ?right))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-right-from-block-to-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?left ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-left ?left)
    			(is-miss-right ?right)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (block-missing ?block1 ?right)
                       (block-at ?block2 ?row ?new-col)
                       (block-missing ?block2 ?left))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))

  (:action move-tile-left
    :parameters (?tile ?row ?old-col ?new-col)
    :precondition (and (is-tile ?tile)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?new-col)
                       (is-blank ?row ?old-col))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-left-inside-block
    :parameters (?tile ?row ?old-col ?new-col ?block ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-right ?right)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?old-col)
                       (not(is-blank ?row ?new-col))
                       (block-at ?block ?row ?new-col)
                       (block-missing ?block ?right))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-left-outside-block
    :parameters (?tile ?row ?old-col ?new-col ?block ?left)
    :precondition (and (is-tile ?tile)
    			(is-block ?block)
    			(is-miss-left ?left)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (is-blank ?row ?new-col)
                       (block-at ?block ?row ?old-col)
                       (block-missing ?block ?left))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  (:action move-tile-left-from-block-to-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?left ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-left ?left)
    			(is-miss-right ?right)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (block-missing ?block1 ?left)
                       (block-at ?block2 ?row ?new-col)
                       (block-missing ?block2 ?right))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)))
                 
  ; moves with blocks
  
  (:action move-tile-down-with-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?down ?up)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-down ?down)
    			(is-miss-up ?up)
    			(next-row ?old-row ?new-row)
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (not (block-missing ?block1 ?down))
                       (or (is-blank ?new-row ?col) 
                           (and (block-at ?block2 ?new-row ?col)
                           	  (is-small-block ?block1) 
                       	  (is-big-block ?block2)
                       	  (block-missing ?block2 ?up) )))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)
                 (not (block-at ?block1 ?old-row ?col))
                 (block-at ?block1 ?new-row ?col)
                 (not(is-blank ?new-row ?col))
                 (is-blank ?old-row ?col)))
                 
  (:action move-tile-up-with-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?up ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-down ?down)
    			(is-miss-up ?up)
    			(next-row ?new-row ?old-row )
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (not (block-missing ?block1 ?up))
                       (or (is-blank ?new-row ?col) 
                           (and (block-at ?block2 ?new-row ?col)
                           	  (is-small-block ?block1) 
                       	  (is-big-block ?block2)
                       	  (block-missing ?block2 ?down) )))
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)
                 (not (block-at ?block1 ?old-row ?col))
                 (block-at ?block1 ?new-row ?col)
                 (not(is-blank ?new-row ?col))
                 (is-blank ?old-row ?col)))
                 
  (:action move-tile-right-with-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?right ?left)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-right ?right)
    			(is-miss-left ?left)
    			(next-column ?old-col ?new-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (not (block-missing ?block1 ?right))
                       (or (is-blank ?row ?new-col) 
                           (and (block-at ?block2 ?row ?new-col)
                           	  (is-small-block ?block1) 
                       	  (is-big-block ?block2)
                       	  (block-missing ?block2 ?left) )))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)
                 (not (block-at ?block1 ?row ?old-col))
                 (block-at ?block1 ?row ?new-col)
                 (not(is-blank ?row ?new-col))
                 (is-blank ?row ?old-col)))
                 
  (:action move-tile-left-with-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?left ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-right ?right)
    			(is-miss-left ?left)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (not (block-missing ?block1 ?left))
                       (or (is-blank ?row ?new-col) 
                           (and (block-at ?block2 ?row ?new-col)
                           	  (is-small-block ?block1) 
                       	  (is-big-block ?block2)
                       	  (block-missing ?block2 ?right) 
                       	  )))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)
                 (not (block-at ?block1 ?row ?old-col))
                 (block-at ?block1 ?row ?new-col)
                 (not(is-blank ?row ?new-col))
                 (is-blank ?row ?old-col)))
                 
  (:action move-tile-up-with-two-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?up)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-up ?up)
    			(next-row ?new-row ?old-row )
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (block-at ?block2 ?old-row ?col)
                       (is-small-block ?block1) 
                      	(is-big-block ?block2)
                       (not (block-missing ?block2 ?up))
                       (is-blank ?new-row ?col) )
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)
                 (not (block-at ?block1 ?old-row ?col))
                 (block-at ?block1 ?new-row ?col)
                 (not (block-at ?block2 ?old-row ?col))
                 (block-at ?block2 ?new-row ?col)
                 (not(is-blank ?new-row ?col))
                 (is-blank ?old-row ?col))) 
                 
  (:action move-tile-down-with-two-block
    :parameters (?tile ?old-row ?new-row ?col ?block1 ?block2 ?up ?down)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-down ?down)
    			(next-row ?old-row ?new-row)
                       (tile-at ?tile ?old-row ?col)
                       (block-at ?block1 ?old-row ?col)
                       (block-at ?block2 ?old-row ?col)
                       (is-small-block ?block1) 
                      	(is-big-block ?block2)
                       (not (block-missing ?block2 ?down))
                       (is-blank ?new-row ?col) )
    :effect (and (not (tile-at ?tile ?old-row ?col))
                 (tile-at ?tile ?new-row ?col)
                 (not (block-at ?block1 ?old-row ?col))
                 (block-at ?block1 ?new-row ?col)
                 (not (block-at ?block2 ?old-row ?col))
                 (block-at ?block2 ?new-row ?col)
                 (not(is-blank ?new-row ?col))
                 (is-blank ?old-row ?col)))
              
  (:action move-tile-left-with-two-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?left)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-left ?left)
    			(next-column ?new-col ?old-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (block-at ?block2 ?row ?old-col)
                       (is-small-block ?block1) 
                      	(is-big-block ?block2)
                       (not (block-missing ?block2 ?left))
                       (is-blank ?row ?new-col))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)
                 (not (block-at ?block1 ?row ?old-col))
                 (block-at ?block1 ?row ?new-col)
                 (not (block-at ?block2 ?row ?old-col))
                 (block-at ?block2 ?row ?new-col)
                 (not(is-blank ?row ?new-col))
                 (is-blank ?row ?old-col))) 
                
  (:action move-tile-right-with-two-block
    :parameters (?tile ?row ?old-col ?new-col ?block1 ?block2 ?right)
    :precondition (and (is-tile ?tile)
    			(is-block ?block1)
    			(is-block ?block2)
    			(is-miss-right ?right)
    			(next-column ?old-col ?new-col)
                       (tile-at ?tile ?row ?old-col)
                       (block-at ?block1 ?row ?old-col)
                       (block-at ?block2 ?row ?old-col)
                       (is-small-block ?block1) 
                      	(is-big-block ?block2)
                       (not (block-missing ?block2 ?right))
                       (is-blank ?row ?new-col))
    :effect (and (not (tile-at ?tile ?row ?old-col))
                 (tile-at ?tile ?row ?new-col)
                 (not (block-at ?block1 ?row ?old-col))
                 (block-at ?block1 ?row ?new-col)
                 (not (block-at ?block2 ?row ?old-col))
                 (block-at ?block2 ?row ?new-col)
                 (not(is-blank ?row ?new-col))
                 (is-blank ?row ?old-col)))                        
                 
)
